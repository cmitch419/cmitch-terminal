{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["$TerminalWindow","styled","div","$TitleBar","$Output","$CommandLine","config","TERMINAL_TITLE","COMMAND_LINE_PREFIX","COMMANDS","App","useState","split","output","setOutput","history","setHistory","command","setCommand","length","sendCommandAndAddToHistory","cmd","trim","newOutput","map","line","className","type","value","onChange","ev","target","onKeyDown","key","autoFocus","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGMA,EAAkBC,IAAOC,IAAV,0LAWfC,EAAYF,IAAOC,IAAV,0LAYTE,EAAUH,IAAOC,IAAV,2RAkBPG,EAAeJ,IAAOC,IAAV,u4BA8EZI,EAAS,CACbC,eAAgB,yBAChBC,oBAAqB,uBACrBC,SAAU,CACR,KAAQ,CAAC,6BAAD,sIAKN,GACA,YACA,SACA,eAEF,QAAW,CACT,uDACA,uDACA,uDACA,uDACA,uDACA,wDAEF,UAAa,CAAC,yBA8EHC,MA1Ef,WACE,MAA4BC,mBAAS,YAjDrB,slBAiDsCC,MAAM,QAA5D,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,mBAAS,IAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAoCP,mBAASI,EAAQI,QAArD,mBAMA,SAASC,IACPJ,EAAW,GAAD,mBAAKD,GAAL,CAAcE,KACxB,IACII,EADOJ,EAAQK,OAAOV,MAAM,KACjB,GACXW,EAAY,CAACjB,EAAOE,oBAAsBS,GAE9C,OAAQI,GACN,IAAK,QAGH,OAFAP,EAAU,CAAC,UACXI,EAAW,IAEb,IAAK,GACH,MACF,QAC4BK,EAAtBjB,EAAOG,SAASY,GAAe,sBAAOE,GAAP,CAAkB,IAAlB,YAAyBjB,EAAOG,SAASY,KAC9D,sBAAOE,GAAP,CAAkB,GAAlB,mBAAkCF,EAAlC,kBAGlBP,EAAU,GAAD,mBAAKD,GAAL,YAAgBU,GAAhB,CAA2B,MACpCL,EAAW,IA4Bb,OArDA,UAsDE,eAAClB,EAAD,WACE,cAACG,EAAD,UAAYG,EAAOC,iBACnB,cAACH,EAAD,UACGS,GAAUA,EAAOW,KAAI,SAACC,GAAD,OACpB,gCAAMA,EAAK,+BAGf,eAACpB,EAAD,WACE,qBAAKqB,UAAU,gBAAf,SAAgCpB,EAAOE,sBACvC,uBAAOkB,UAAU,cAAcC,KAAK,OAAOC,MAAOX,EAASY,SA7DjE,SAAgCC,GAC9BZ,EAAWY,EAAGC,OAAOH,QA4D4EI,UArBnG,SAAoBF,GAElB,OADYA,EAAGG,KAEb,IAAK,QACHb,MAiBoHc,WAAS,IAC7H,wBAAQR,UAAU,cAAcS,QAASf,EAAzC,0BC5MOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f7260bf.chunk.js","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n\nconst $TerminalWindow = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n\n  top: 0;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  max-height: 100vh;\n`;\nconst $TitleBar = styled.div`\n  flex-grow: 0;\n  order: -100;\n\n  margin: 0;\n  padding: 0;\n  padding-left: 0.5rem;\n  min-height: 1.25rem;\n\n  background: #555555;\n  color: #FFFFFF;\n`;\nconst $Output = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-end;\n  \n  padding-left: 0.5rem;\n\n  overflow: auto;\n  pre {\n    margin: 0;\n    padding: 0;\n    \n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n`;\nconst $CommandLine = styled.div`\n  flex-grow: 0;\n  order: 100;\n\n  display: flex;\n  flex-flow: row nowrap;\n\n  min-height: 1.25rem;\n  margin: 0;\n  padding: 0;\n  padding-left: 0.5rem;\n\n  background: #222222;\n  font-family: inherit;\n  font-size: inherit;\n  color: lightgreen;\n\n  .commandPrefix {\n    flex-grow: 0;\n    order: -100;\n    \n    color: inherit;\n  }\n  .commandLine {\n    flex-grow: 1;\n    order: 100;\n    \n    margin: 0;\n    padding: 0;\n    padding-left: 0.5rem;\n\n    border: none;\n    outline: none;\n    &:focus {\n      border: none;\n      outline: none;\n    }\n\n    background: inherit;\n    font-family: inherit;\n    font-size: inherit;\n    color: inherit;\n  }\n  .enterButton {\n    flex-grow: 0;\n    order: 200;\n\n    box-sizing: border-box;\n    border: solid green;\n\n    background-color: inherit;\n    font-family: inherit;\n    color: inherit;\n  }\n`;\n\nconst SPLASH_ASCII = `\n                              __\n                     /\\\\    .-\" /\n                    /  ; .'  .' \n                   :   :/  .'   \n                    \\\\  ;-.'     \n       .--\"\"\"\"--..__/     \\`.    \n     .'           .'    \\`o  \\\\   \n    /                    \\`   ;  \n   :                  \\\\      :  \n .-;        -.         \\`.__.-'  \n:  ;          \\\\     ,   ;       \n'._:           ;   :   (        \n    \\\\/  .__    ;    \\\\   \\`-.     \n bug ;     \"-,/_..--\"\\`-..__)    \n     '\"\"--.._:\n     Art by Blazej Kozlowski\n\nWelcome to cmitch.info!\nType \\`help' to get started\n`;\n\nconst config = {\n  TERMINAL_TITLE: 'Terminal - cmitch.info',\n  COMMAND_LINE_PREFIX: 'anon@cmitch.info: $ ',\n  COMMANDS: {\n    'help': [\n      `CMITCH bash, version 0.1.0`,\n      `¯\\\\(°_o)/¯ <( HELP! )`,\n      `These shell commands are defined internally.  Type \\`help' to see this list.`,\n      `Thanks for visiting!`,\n      '',\n      '\\tcontact',\n      '\\thelp',\n      '\\tidunnolol'\n    ],\n    'contact': [\n      '****************************************************',\n      '* Chris Mitchell                                   *',\n      '* email:    cmitch419@gmail.com                    *',\n      '* github:   https://github.com/cmitch419           *',\n      '* linkedin: https://www.linkedin.com/in/cmitch419  *',\n      '****************************************************'\n    ],\n    'idunnolol': ['¯\\\\(°_o)/¯']\n  }\n};\n\nfunction App() {\n  const [output, setOutput] = useState([...SPLASH_ASCII.split('\\n')]);\n  const [history, setHistory] = useState([]);\n  const [command, setCommand] = useState('');\n  const [historyIdx, setHistoryIdx] = useState(history.length);\n\n  function handleCommandLineInput(ev) {\n    setCommand(ev.target.value);\n  }\n\n  function sendCommandAndAddToHistory() {\n    setHistory([...history, command]);\n    let args = command.trim().split(' ');\n    let cmd = args[0];\n    let newOutput = [config.COMMAND_LINE_PREFIX + command];\n\n    switch (cmd) {\n      case 'clear':\n        setOutput(['']);\n        setCommand('');\n        return;\n      case '':\n        break;\n      default:\n        if (config.COMMANDS[cmd]) newOutput = [...newOutput, '', ...config.COMMANDS[cmd]];\n        else newOutput = [...newOutput, '', `Command '${cmd}' not found.`];\n        break;\n    }\n    setOutput([...output, ...newOutput, ''])\n    setCommand('');\n  }\n\n  function changeHistoryIdx(diff) {\n    if (0 <= historyIdx + diff && historyIdx + diff < history.length) {\n      setHistoryIdx(historyIdx + diff);\n      setCommand(history[historyIdx]);\n    }\n  };\n\n  function handleArrowUp() {\n    changeHistoryIdx(-1);\n  }\n  function handleArrowDown() {\n    changeHistoryIdx(1);\n  }\n\n  function handleKeys(ev) {\n    const key = ev.key;\n    switch (key) {\n      case 'Enter':\n        sendCommandAndAddToHistory();\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <$TerminalWindow>\n      <$TitleBar>{config.TERMINAL_TITLE}</$TitleBar>\n      <$Output>\n        {output && output.map((line) =>\n          <pre>{line}<br /></pre>\n        )}\n      </$Output>\n      <$CommandLine>\n        <div className=\"commandPrefix\">{config.COMMAND_LINE_PREFIX}</div>\n        <input className=\"commandLine\" type=\"text\" value={command} onChange={handleCommandLineInput} onKeyDown={handleKeys} autoFocus />\n        <button className=\"enterButton\" onClick={sendCommandAndAddToHistory}>ENTER</button>\n      </$CommandLine>\n    </$TerminalWindow>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}