{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["$Container","styled","div","$TopBar","$CommandLine","$Output","config","TERMINAL_TITLE","COMMAND_LINE_PREFIX","COMMANDS","App","useState","split","output","setOutput","history","setHistory","command","setCommand","length","map","line","class","type","value","onChange","ev","target","onKeyDown","code","cmd","trim","newOutput","sendCommandAndAddToHistory","preventDefault","autoFocus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGMA,EAAaC,IAAOC,IAAV,8SAcVC,EAAUF,IAAOC,IAAV,uKASPE,EAAeH,IAAOC,IAAV,2dAuBZG,EAAUJ,IAAOC,IAAV,oWAsCPI,EAAS,CACbC,eAAgB,yBAChBC,oBAAqB,uBACrBC,SAAU,CACR,KAAQ,CAAC,6BAAD,sIAKN,GACA,UACA,OACA,aAEF,QAAW,CACT,iBACA,8BACA,wCACA,oDAEF,UAAa,CAAC,yBAiFHC,MA7Ef,WACE,MAA4BC,mBAAS,YA9CrB,yjBA8CsCC,MAAM,QAA5D,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,qBAA9B,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAoCP,mBAASI,EAAQI,QAArD,mBAyDA,OAzDA,UA0DE,eAACnB,EAAD,WACE,cAACG,EAAD,UAAUG,EAAOC,iBACjB,cAACF,EAAD,UACGQ,GAAUA,EAAOO,KAAI,SAACC,GAAD,OACpB,gCAAMA,EAAK,+BAGf,eAACjB,EAAD,WACE,qBAAKkB,MAAM,gBAAX,SAA4BhB,EAAOE,sBACnC,uBAAOe,KAAK,OAAOC,MAAOP,EAASQ,SAjEzC,SAAgCC,GAC9BR,EAAWQ,EAAGC,OAAOH,QAgEoDI,UAxB3E,SAAoBF,GAElB,OADaA,EAAGG,MAEd,IAAK,SAxCT,WAEEb,EAAW,GAAD,mBAAKD,GAAL,CAAcE,KACxB,IACIa,EADOb,EAAQc,OAAOnB,MAAM,KACjB,GACXoB,EAAY,CAAC1B,EAAOE,oBAAsBS,GAE9C,OAAQa,GACN,IAAK,QACHhB,EAAU,CAAC,KACX,MACF,IAAK,GACH,MACF,QAC4BkB,EAAtB1B,EAAOG,SAASqB,GAAe,sBAAOE,GAAP,CAAkB,IAAlB,YAAyB1B,EAAOG,SAASqB,KAC9D,sBAAOE,GAAP,CAAkB,GAAlB,mBAAkCF,EAAlC,kBACdhB,EAAU,GAAD,mBAAKD,GAAL,YAAgBmB,GAAhB,CAA2B,MAExCd,EAAW,IAuBPe,GACA,MACF,IAAK,UACHP,EAAGQ,mBAiByFC,WAAS,WC1K9FC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d6e24ae8.chunk.js","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n\nconst $Container = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  font-size: 1rem;\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  color: lightgreen;\n  display: flex;\n  flex-direction: column;\n  background: black;\n`;\n\nconst $TopBar = styled.div`\n  width: 100%;\n  min-height: 1.5rem;\n  padding-left: 0.5rem;\n  box-sizing: border-box;\n  color: white;\n  background-color: darkgray;\n`;\n\nconst $CommandLine = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0;\n  padding: 0;\n  padding-left: 0.5rem;\n  input {\n    padding-left: 0.5rem;\n    flex-grow: 1;\n    font-size: 1rem;\n    min-height: 1rem;\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n    color: lightgreen;\n    background-color: black;\n    border: none;\n    outline: none;\n    &:focus {\n      border: none;\n      outline: none;\n    }\n  }\n`;\n\nconst $Output = styled.div`\n  flex-grow: 1;\n  margin: 0;\n  padding: 0;\n  padding-left: 0.5rem;\n  // color: lightgreen;\n  // font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n  // font-size: 1rem;\n  pre {\n    flex-grow: 1;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst SPLASH_ASCII = `\n                              __\n                     /\\\\    .-\" /\n                    /  ; .'  .' \n                   :   :/  .'   \n                    \\\\  ;-.'     \n       .--\"\"\"\"--..__/     \\`.    \n     .'           .'    \\`o  \\\\   \n    /                    \\`   ;  \n   :                  \\\\      :  \n .-;        -.         \\`.__.-'  \n:  ;          \\\\     ,   ;       \n'._:           ;   :   (        \n    \\\\/  .__    ;    \\\\   \\`-.     \n bug ;     \"-,/_..--\"\\`-..__)    \n     '\"\"--.._:\n     Art by Blazej Kozlowski\n\nWelcome to cmitch.info\n`;\n\nconst config = {\n  TERMINAL_TITLE: 'Terminal - cmitch.info',\n  COMMAND_LINE_PREFIX: 'anon@cmitch.info: $ ',\n  COMMANDS: {\n    'help': [\n      `CMITCH bash, version 0.1.0`,\n      `¯\\\\(°_o)/¯ <( HELP! )`,\n      `These shell commands are defined internally.  Type \\`help' to see this list.`,\n      `Thanks for visiting!`,\n      '',\n      'contact',\n      'help',\n      'idunnolol'\n    ],\n    'contact': [\n      'Chris Mitchell',\n      'email:\\tcmitch419@gmail.com',\n      'github:\\thttps://github.com/cmitch419',\n      'linkedin:\\thttps://www.linkedin.com/in/cmitch419'\n    ],\n    'idunnolol': ['¯\\\\(°_o)/¯']\n  }\n};\n\nfunction App() {\n  const [output, setOutput] = useState([...SPLASH_ASCII.split('\\n')]);\n  const [history, setHistory] = useState([]);\n  const [command, setCommand] = useState();\n  const [historyIdx, setHistoryIdx] = useState(history.length);\n\n  function handleCommandLineInput(ev) {\n    setCommand(ev.target.value);\n  }\n\n  function sendCommandAndAddToHistory() {\n\n    setHistory([...history, command]);\n    let args = command.trim().split(' ');\n    let cmd = args[0];\n    let newOutput = [config.COMMAND_LINE_PREFIX + command];\n\n    switch (cmd) {\n      case 'clear':\n        setOutput(['']);\n        break;\n      case '':\n        break;\n      default:\n        if (config.COMMANDS[cmd]) newOutput = [...newOutput, '', ...config.COMMANDS[cmd]];\n        else newOutput = [...newOutput, '', `Command '${cmd}' not found.`];\n        setOutput([...output, ...newOutput, ''])\n    }\n    setCommand('');\n  }\n\n  function changeHistoryIdx(diff) {\n\n\n    if (0 <= historyIdx + diff && historyIdx + diff < history.length) {\n      setHistoryIdx(historyIdx + diff);\n      setCommand(history[historyIdx]);\n    }\n  };\n\n  function handleArrowUp() {\n    changeHistoryIdx(-1);\n  }\n  function handleArrowDown() {\n    changeHistoryIdx(1);\n  }\n\n  function handleKeys(ev) {\n    const code = ev.code;\n    switch (code) {\n      case 'Enter':\n        sendCommandAndAddToHistory();\n        break;\n      case 'ArrowUp':\n        ev.preventDefault();\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <$Container>\n      <$TopBar>{config.TERMINAL_TITLE}</$TopBar>\n      <$Output>\n        {output && output.map((line) =>\n          <pre>{line}<br /></pre>\n        )}\n      </$Output>\n      <$CommandLine>\n        <div class=\"commandprefix\">{config.COMMAND_LINE_PREFIX}</div>\n        <input type=\"text\" value={command} onChange={handleCommandLineInput} onKeyDown={handleKeys} autoFocus />\n      </$CommandLine>\n    </$Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}